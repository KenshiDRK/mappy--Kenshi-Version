//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34209
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mappy.Lang {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class app {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal app() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("mappy.Lang.app", typeof(app).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The process {0} could not be loaded either due to a security issue or is not in the expected format.
        ///
        ///If you are running on Vista/7 then please start the program in administrator mode..
        /// </summary>
        internal static string bubble_error_loadpid_text {
            get {
                return ResourceManager.GetString("bubble_error_loadpid_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Unable to load {0}.
        /// </summary>
        internal static string bubble_error_loadpid_title {
            get {
                return ResourceManager.GetString("bubble_error_loadpid_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a You have disabled interaction with the map. To lift this restriction, uncheck &quot;Click Through&quot; from the main tray icon..
        /// </summary>
        internal static string bubble_warn_clickthru_text {
            get {
                return ResourceManager.GetString("bubble_warn_clickthru_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Click-through.
        /// </summary>
        internal static string bubble_warn_clickthru_title {
            get {
                return ResourceManager.GetString("bubble_warn_clickthru_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a There are no valid games running to interact with. Please run a new game instance and click refresh from the context menu..
        /// </summary>
        internal static string bubble_warn_nogames_text {
            get {
                return ResourceManager.GetString("bubble_warn_nogames_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a No Games Detected.
        /// </summary>
        internal static string bubble_warn_nogames_title {
            get {
                return ResourceManager.GetString("bubble_warn_nogames_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Browse.
        /// </summary>
        internal static string button_browse {
            get {
                return ResourceManager.GetString("button_browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Cancel.
        /// </summary>
        internal static string button_cancel {
            get {
                return ResourceManager.GetString("button_cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Decline.
        /// </summary>
        internal static string button_decline {
            get {
                return ResourceManager.GetString("button_decline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Default.
        /// </summary>
        internal static string button_defaults {
            get {
                return ResourceManager.GetString("button_defaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Download.
        /// </summary>
        internal static string button_download {
            get {
                return ResourceManager.GetString("button_download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable.
        /// </summary>
        internal static string button_enable {
            get {
                return ResourceManager.GetString("button_enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Ignore.
        /// </summary>
        internal static string button_ignore {
            get {
                return ResourceManager.GetString("button_ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a No.
        /// </summary>
        internal static string button_no {
            get {
                return ResourceManager.GetString("button_no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Ok.
        /// </summary>
        internal static string button_ok {
            get {
                return ResourceManager.GetString("button_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Reset.
        /// </summary>
        internal static string button_reset {
            get {
                return ResourceManager.GetString("button_reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Yes.
        /// </summary>
        internal static string button_yes {
            get {
                return ResourceManager.GetString("button_yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Claim line color.
        /// </summary>
        internal static string config_appear_claim_line_color {
            get {
                return ResourceManager.GetString("config_appear_claim_line_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Draw heading lines at all times.
        /// </summary>
        internal static string config_appear_draw_heading_lines {
            get {
                return ResourceManager.GetString("config_appear_draw_heading_lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enemy color.
        /// </summary>
        internal static string config_appear_enemy_color {
            get {
                return ResourceManager.GetString("config_appear_enemy_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enemy Info Color.
        /// </summary>
        internal static string config_appear_enemy_info_color {
            get {
                return ResourceManager.GetString("config_appear_enemy_info_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enemy Info Font:.
        /// </summary>
        internal static string config_appear_enemy_info_font {
            get {
                return ResourceManager.GetString("config_appear_enemy_info_font", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Base size for enemies.
        /// </summary>
        internal static string config_appear_enemy_size {
            get {
                return ResourceManager.GetString("config_appear_enemy_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Text glow color.
        /// </summary>
        internal static string config_appear_glow_color {
            get {
                return ResourceManager.GetString("config_appear_glow_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Grid line color.
        /// </summary>
        internal static string config_appear_grid_line_color {
            get {
                return ResourceManager.GetString("config_appear_grid_line_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Grid size.
        /// </summary>
        internal static string config_appear_grid_size {
            get {
                return ResourceManager.GetString("config_appear_grid_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Grid tick color.
        /// </summary>
        internal static string config_appear_grid_tick_color {
            get {
                return ResourceManager.GetString("config_appear_grid_tick_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Party member outline color.
        /// </summary>
        internal static string config_appear_group_color {
            get {
                return ResourceManager.GetString("config_appear_group_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Heading line color.
        /// </summary>
        internal static string config_appear_heading_line_color {
            get {
                return ResourceManager.GetString("config_appear_heading_line_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Hunt line color.
        /// </summary>
        internal static string config_appear_hunt_line_color {
            get {
                return ResourceManager.GetString("config_appear_hunt_line_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a When hunt is dead / claimed / not an attackable enemy.
        /// </summary>
        internal static string config_appear_hunt_locked_line_color {
            get {
                return ResourceManager.GetString("config_appear_hunt_locked_line_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a NPC color.
        /// </summary>
        internal static string config_appear_npc_color {
            get {
                return ResourceManager.GetString("config_appear_npc_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a NPC Info Color.
        /// </summary>
        internal static string config_appear_npc_info_color {
            get {
                return ResourceManager.GetString("config_appear_npc_info_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a NPC Info Font:.
        /// </summary>
        internal static string config_appear_npc_info_font {
            get {
                return ResourceManager.GetString("config_appear_npc_info_font", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Base size for NPCs.
        /// </summary>
        internal static string config_appear_npc_size {
            get {
                return ResourceManager.GetString("config_appear_npc_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Pet/target line color.
        /// </summary>
        internal static string config_appear_pet_line_color {
            get {
                return ResourceManager.GetString("config_appear_pet_line_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Player Info Color.
        /// </summary>
        internal static string config_appear_player_info_color {
            get {
                return ResourceManager.GetString("config_appear_player_info_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Player Info Font:.
        /// </summary>
        internal static string config_appear_player_info_font {
            get {
                return ResourceManager.GetString("config_appear_player_info_font", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Player position color.
        /// </summary>
        internal static string config_appear_player_position_color {
            get {
                return ResourceManager.GetString("config_appear_player_position_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Base size for players.
        /// </summary>
        internal static string config_appear_player_size {
            get {
                return ResourceManager.GetString("config_appear_player_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Alliance member outline color.
        /// </summary>
        internal static string config_appear_raid_color {
            get {
                return ResourceManager.GetString("config_appear_raid_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Radar range color.
        /// </summary>
        internal static string config_appear_range_color {
            get {
                return ResourceManager.GetString("config_appear_range_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Grid.
        /// </summary>
        internal static string config_appear_section_grid {
            get {
                return ResourceManager.GetString("config_appear_section_grid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Connection Lines.
        /// </summary>
        internal static string config_appear_section_lines {
            get {
                return ResourceManager.GetString("config_appear_section_lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Spawns.
        /// </summary>
        internal static string config_appear_section_spawn {
            get {
                return ResourceManager.GetString("config_appear_section_spawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Line and text color for selected and targeted entities.
        /// </summary>
        internal static string config_appear_selected_color {
            get {
                return ResourceManager.GetString("config_appear_selected_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show claim lines.
        /// </summary>
        internal static string config_appear_show_claim_lines {
            get {
                return ResourceManager.GetString("config_appear_show_claim_lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show grid lines.
        /// </summary>
        internal static string config_appear_show_grid_lines {
            get {
                return ResourceManager.GetString("config_appear_show_grid_lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show grid ticks.
        /// </summary>
        internal static string config_appear_show_grid_ticks {
            get {
                return ResourceManager.GetString("config_appear_show_grid_ticks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show hunt lines.
        /// </summary>
        internal static string config_appear_show_hunt_lines {
            get {
                return ResourceManager.GetString("config_appear_show_hunt_lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show pet/target lines.
        /// </summary>
        internal static string config_appear_show_pet_lines {
            get {
                return ResourceManager.GetString("config_appear_show_pet_lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show the player position.
        /// </summary>
        internal static string config_appear_show_player_position {
            get {
                return ResourceManager.GetString("config_appear_show_player_position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show the radar range guide.
        /// </summary>
        internal static string config_appear_show_range {
            get {
                return ResourceManager.GetString("config_appear_show_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Add to size when player is in the same group or alliance.
        /// </summary>
        internal static string config_appear_spawn_group_size {
            get {
                return ResourceManager.GetString("config_appear_spawn_group_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Add to size when spawn matches a hunt pattern.
        /// </summary>
        internal static string config_appear_spawn_hunt_size {
            get {
                return ResourceManager.GetString("config_appear_spawn_hunt_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Add to size when selected or targeted.
        /// </summary>
        internal static string config_appear_spawn_select_size {
            get {
                return ResourceManager.GetString("config_appear_spawn_select_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Display a glow effect around selected or targetted entities.
        /// </summary>
        internal static string config_appear_use_glow {
            get {
                return ResourceManager.GetString("config_appear_use_glow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Override player color with:.
        /// </summary>
        internal static string config_appear_use_player_color {
            get {
                return ResourceManager.GetString("config_appear_use_player_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Display a shadow below text.
        /// </summary>
        internal static string config_appear_use_shadow {
            get {
                return ResourceManager.GetString("config_appear_use_shadow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Main player arrow color.
        /// </summary>
        internal static string config_appear_you_color {
            get {
                return ResourceManager.GetString("config_appear_you_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Main player fill color.
        /// </summary>
        internal static string config_appear_you_fill_color {
            get {
                return ResourceManager.GetString("config_appear_you_fill_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Display a solid shape behind the main player arrow.
        /// </summary>
        internal static string config_appear_you_fill_enabled {
            get {
                return ResourceManager.GetString("config_appear_you_fill_enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Alpha Maximum.
        /// </summary>
        internal static string config_depth_alpha_max {
            get {
                return ResourceManager.GetString("config_depth_alpha_max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Alpha Minimum.
        /// </summary>
        internal static string config_depth_alpha_min {
            get {
                return ResourceManager.GetString("config_depth_alpha_min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Depth Cutoff.
        /// </summary>
        internal static string config_depth_cutoff {
            get {
                return ResourceManager.GetString("config_depth_cutoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Depth Distance.
        /// </summary>
        internal static string config_depth_distance {
            get {
                return ResourceManager.GetString("config_depth_distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable depth filter for map lines.
        /// </summary>
        internal static string config_depth_enable_line_filter {
            get {
                return ResourceManager.GetString("config_depth_enable_line_filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable depth filter for spawns.
        /// </summary>
        internal static string config_depth_enable_spawn_filter {
            get {
                return ResourceManager.GetString("config_depth_enable_spawn_filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Use alpha blending.
        /// </summary>
        internal static string config_depth_use_alpha {
            get {
                return ResourceManager.GetString("config_depth_use_alpha", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a * Signatures must be in hexidecimal string format.
        ///* Use ?? to represent a single wildcard byte.
        ///* Prefixes may be used to control where the pointer is read from.
        ///* By default, the pointer is read from the first wildcard byte or the bytes following the match if no wildcard is used.
        ///* A checkmark does not necessarily indicate a usable signature, but only that the byte pattern was found in memory.
        ///
        ///Prefixes:
        ///&lt;&lt; Use the 32bit integer preceeding a match
        ///&gt;&gt; Use the 32bit integer following the match regardless of [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string config_general_sig_help {
            get {
                return ResourceManager.GetString("config_general_sig_help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a My ID.
        /// </summary>
        internal static string config_general_SIG_MY_ID {
            get {
                return ResourceManager.GetString("config_general_SIG_MY_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a My Target.
        /// </summary>
        internal static string config_general_SIG_MY_TARGET {
            get {
                return ResourceManager.GetString("config_general_SIG_MY_TARGET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Note: there are no running instances of FFXI, so some feedback and validation elements will not be available to you while modifying these values..
        /// </summary>
        internal static string config_general_sig_no_active_pid {
            get {
                return ResourceManager.GetString("config_general_sig_no_active_pid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a You must restart Mappy for any signature change to take effect..
        /// </summary>
        internal static string config_general_sig_restart_warning {
            get {
                return ResourceManager.GetString("config_general_sig_restart_warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Spawn List End.
        /// </summary>
        internal static string config_general_SIG_SPAWN_END {
            get {
                return ResourceManager.GetString("config_general_SIG_SPAWN_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Spawn List Start.
        /// </summary>
        internal static string config_general_SIG_SPAWN_START {
            get {
                return ResourceManager.GetString("config_general_SIG_SPAWN_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning: modifying these values may make Mappy inoperable..
        /// </summary>
        internal static string config_general_sig_warning {
            get {
                return ResourceManager.GetString("config_general_sig_warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Current Zone ID.
        /// </summary>
        internal static string config_general_SIG_ZONE_ID {
            get {
                return ResourceManager.GetString("config_general_SIG_ZONE_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Zone Names (short).
        /// </summary>
        internal static string config_general_SIG_ZONE_SHORT {
            get {
                return ResourceManager.GetString("config_general_SIG_ZONE_SHORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Behavior.
        /// </summary>
        internal static string config_group_behavior {
            get {
                return ResourceManager.GetString("config_group_behavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Map Pack.
        /// </summary>
        internal static string config_group_mappack {
            get {
                return ResourceManager.GetString("config_group_mappack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Spawn Information.
        /// </summary>
        internal static string config_group_spawninfo {
            get {
                return ResourceManager.GetString("config_group_spawninfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Action Key.
        /// </summary>
        internal static string config_hk_action_key {
            get {
                return ResourceManager.GetString("config_hk_action_key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Holding the action key down temporarily does the following:
        ///* Disables click-through mode
        ///* Changes the background opacity to 100%
        ///* Allows the mouse wheel to increase/decrease zoom regardless of application focus.
        /// </summary>
        internal static string config_hk_action_key_help {
            get {
                return ResourceManager.GetString("config_hk_action_key_help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Do not allow other applications to process a handled action (does not always  work).
        /// </summary>
        internal static string config_hk_allow_cancel {
            get {
                return ResourceManager.GetString("config_hk_allow_cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Assigned Hot Key.
        /// </summary>
        internal static string config_hk_col_action_binding {
            get {
                return ResourceManager.GetString("config_hk_col_action_binding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Action.
        /// </summary>
        internal static string config_hk_col_action_name {
            get {
                return ResourceManager.GetString("config_hk_col_action_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable global hot-key and mouse filtering.
        /// </summary>
        internal static string config_hk_enable_filtering {
            get {
                return ResourceManager.GetString("config_hk_enable_filtering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a To assign a key, highlight the action then press the desired key combination.
        ///To unassign an action, press the escape key or choose unbind from the context menu..
        /// </summary>
        internal static string config_hk_help {
            get {
                return ResourceManager.GetString("config_hk_help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Image opacity.
        /// </summary>
        internal static string config_map_alt_opacity {
            get {
                return ResourceManager.GetString("config_map_alt_opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable the map pack.
        /// </summary>
        internal static string config_map_alt_show {
            get {
                return ResourceManager.GetString("config_map_alt_show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Display the map image even when a vector map is available.
        /// </summary>
        internal static string config_map_alt_show_always {
            get {
                return ResourceManager.GetString("config_map_alt_show_always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Auto fit the radar range after zoning.
        /// </summary>
        internal static string config_map_autosnap {
            get {
                return ResourceManager.GetString("config_map_autosnap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Fill color.
        /// </summary>
        internal static string config_map_fill_color {
            get {
                return ResourceManager.GetString("config_map_fill_color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Fill opacity.
        /// </summary>
        internal static string config_map_fill_opacity {
            get {
                return ResourceManager.GetString("config_map_fill_opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Display enemy info at all times.
        /// </summary>
        internal static string config_map_info_all_enemies {
            get {
                return ResourceManager.GetString("config_map_info_all_enemies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Display NPC info at all times.
        /// </summary>
        internal static string config_map_info_all_npcs {
            get {
                return ResourceManager.GetString("config_map_info_all_npcs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Display player info at all times.
        /// </summary>
        internal static string config_map_info_all_players {
            get {
                return ResourceManager.GetString("config_map_info_all_players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Info Template.
        /// </summary>
        internal static string config_map_info_template {
            get {
                return ResourceManager.GetString("config_map_info_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The template determines what information is displayed for spawns.
        ///
        ///Use the following tokens to customize the display:
        ///{name} : the spawn name
        ///{hpp} : the current health percent
        ///{distance} : how far the spawn is from the players location
        ///{br} : a line break
        ///{id}: the id of the spawn.
        /// </summary>
        internal static string config_map_info_template_help {
            get {
                return ResourceManager.GetString("config_map_info_template_help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Map pack image path.
        /// </summary>
        internal static string config_map_mappackpath {
            get {
                return ResourceManager.GetString("config_map_mappackpath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Data path.
        /// </summary>
        internal static string config_map_mappath {
            get {
                return ResourceManager.GetString("config_map_mappath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Poll Frequency.
        /// </summary>
        internal static string config_map_pollfreq {
            get {
                return ResourceManager.GetString("config_map_pollfreq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Scale map lines when zooming in.
        /// </summary>
        internal static string config_map_scale_lines {
            get {
                return ResourceManager.GetString("config_map_scale_lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a About {0}.
        /// </summary>
        internal static string dialog_about {
            get {
                return ResourceManager.GetString("dialog_about", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Preferences.
        /// </summary>
        internal static string dialog_config {
            get {
                return ResourceManager.GetString("dialog_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Center View.
        /// </summary>
        internal static string hotkey_center {
            get {
                return ResourceManager.GetString("hotkey_center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Add Point to Map Line.
        /// </summary>
        internal static string hotkey_edit_add {
            get {
                return ResourceManager.GetString("hotkey_edit_add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Cancel Map Line.
        /// </summary>
        internal static string hotkey_edit_cancel {
            get {
                return ResourceManager.GetString("hotkey_edit_cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Remove Point from Map Line.
        /// </summary>
        internal static string hotkey_edit_remove {
            get {
                return ResourceManager.GetString("hotkey_edit_remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Start New Map Line.
        /// </summary>
        internal static string hotkey_edit_start {
            get {
                return ResourceManager.GetString("hotkey_edit_start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Exit Application.
        /// </summary>
        internal static string hotkey_exit {
            get {
                return ResourceManager.GetString("hotkey_exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Open Preferences.
        /// </summary>
        internal static string hotkey_openprefs {
            get {
                return ResourceManager.GetString("hotkey_openprefs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Snap to Range.
        /// </summary>
        internal static string hotkey_snap {
            get {
                return ResourceManager.GetString("hotkey_snap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Toggle Click-Through.
        /// </summary>
        internal static string hotkey_toggleclickthru {
            get {
                return ResourceManager.GetString("hotkey_toggleclickthru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Toggle Grid.
        /// </summary>
        internal static string hotkey_togglegrid {
            get {
                return ResourceManager.GetString("hotkey_togglegrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Toggle Hidden Spawns.
        /// </summary>
        internal static string hotkey_togglehidden {
            get {
                return ResourceManager.GetString("hotkey_togglehidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Toggle Map Labels.
        /// </summary>
        internal static string hotkey_togglelabels {
            get {
                return ResourceManager.GetString("hotkey_togglelabels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Toggle Map Lines.
        /// </summary>
        internal static string hotkey_togglelines {
            get {
                return ResourceManager.GetString("hotkey_togglelines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Toggle Map Image.
        /// </summary>
        internal static string hotkey_togglemapimage {
            get {
                return ResourceManager.GetString("hotkey_togglemapimage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Zoom Out.
        /// </summary>
        internal static string hotkey_zoom_decrease {
            get {
                return ResourceManager.GetString("hotkey_zoom_decrease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Zoom In.
        /// </summary>
        internal static string hotkey_zoom_increase {
            get {
                return ResourceManager.GetString("hotkey_zoom_increase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Id.
        /// </summary>
        internal static string id {
            get {
                return ResourceManager.GetString("id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a About....
        /// </summary>
        internal static string menu_about {
            get {
                return ResourceManager.GetString("menu_about", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Add {0} As New Hunt by....
        /// </summary>
        internal static string menu_add_ashunt {
            get {
                return ResourceManager.GetString("menu_add_ashunt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Add {0} As Mob to Replace by....
        /// </summary>
        internal static string menu_add_asreplacement {
            get {
                return ResourceManager.GetString("menu_add_asreplacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Center View.
        /// </summary>
        internal static string menu_center_view {
            get {
                return ResourceManager.GetString("menu_center_view", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Edit Hunts....
        /// </summary>
        internal static string menu_edit_hunts {
            get {
                return ResourceManager.GetString("menu_edit_hunts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Edit Map....
        /// </summary>
        internal static string menu_edit_map {
            get {
                return ResourceManager.GetString("menu_edit_map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Edit Replacements....
        /// </summary>
        internal static string menu_edit_replacements {
            get {
                return ResourceManager.GetString("menu_edit_replacements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Exit.
        /// </summary>
        internal static string menu_exit {
            get {
                return ResourceManager.GetString("menu_exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Mode.
        /// </summary>
        internal static string menu_mode {
            get {
                return ResourceManager.GetString("menu_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a New Label....
        /// </summary>
        internal static string menu_new_label {
            get {
                return ResourceManager.GetString("menu_new_label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Preferences....
        /// </summary>
        internal static string menu_preferences {
            get {
                return ResourceManager.GetString("menu_preferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Refresh Instances.
        /// </summary>
        internal static string menu_refresh_games {
            get {
                return ResourceManager.GetString("menu_refresh_games", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Reload Map.
        /// </summary>
        internal static string menu_reload_map {
            get {
                return ResourceManager.GetString("menu_reload_map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Save Map.
        /// </summary>
        internal static string menu_save_map {
            get {
                return ResourceManager.GetString("menu_save_map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show Hidden Spawns.
        /// </summary>
        internal static string menu_show_hidden {
            get {
                return ResourceManager.GetString("menu_show_hidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show Labels.
        /// </summary>
        internal static string menu_show_labels {
            get {
                return ResourceManager.GetString("menu_show_labels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show Map Lines.
        /// </summary>
        internal static string menu_show_lines {
            get {
                return ResourceManager.GetString("menu_show_lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show Map Image.
        /// </summary>
        internal static string menu_show_map_image {
            get {
                return ResourceManager.GetString("menu_show_map_image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Show Spawns.
        /// </summary>
        internal static string menu_show_spawns {
            get {
                return ResourceManager.GetString("menu_show_spawns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Snap to Range.
        /// </summary>
        internal static string menu_snap_range {
            get {
                return ResourceManager.GetString("menu_snap_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Click Through.
        /// </summary>
        internal static string menu_toggle_clickthrough {
            get {
                return ResourceManager.GetString("menu_toggle_clickthrough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Draggable.
        /// </summary>
        internal static string menu_toggle_draggable {
            get {
                return ResourceManager.GetString("menu_toggle_draggable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Resizable.
        /// </summary>
        internal static string menu_toggle_resizable {
            get {
                return ResourceManager.GetString("menu_toggle_resizable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Always On Top.
        /// </summary>
        internal static string menu_toggle_topmost {
            get {
                return ResourceManager.GetString("menu_toggle_topmost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Image Map Editor.
        /// </summary>
        internal static string mode_imagemapeditor {
            get {
                return ResourceManager.GetString("mode_imagemapeditor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Navigation.
        /// </summary>
        internal static string mode_navigator {
            get {
                return ResourceManager.GetString("mode_navigator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Always overwrite the file without asking.
        /// </summary>
        internal static string msg_alwaysoverwrite {
            get {
                return ResourceManager.GetString("msg_alwaysoverwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Really cancel the current line? This operation is permanent..
        /// </summary>
        internal static string msg_cancel_line_text {
            get {
                return ResourceManager.GetString("msg_cancel_line_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Confirm Cancel.
        /// </summary>
        internal static string msg_cancel_line_title {
            get {
                return ResourceManager.GetString("msg_cancel_line_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a You will permanently lose all unsaved changes made to the map if you change the map path.
        ///
        ///Do you still wish to continue?.
        /// </summary>
        internal static string msg_config_pathchangeloss_text {
            get {
                return ResourceManager.GetString("msg_config_pathchangeloss_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Confirm.
        /// </summary>
        internal static string msg_config_pathchangeloss_title {
            get {
                return ResourceManager.GetString("msg_config_pathchangeloss_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a This will change all signatures to the internally built values.
        ///
        ///Are you sure you want to do this?.
        /// </summary>
        internal static string msg_confirm_sigreset_text {
            get {
                return ResourceManager.GetString("msg_confirm_sigreset_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Confirm Reset.
        /// </summary>
        internal static string msg_confirm_sigreset_title {
            get {
                return ResourceManager.GetString("msg_confirm_sigreset_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Do not show again.
        /// </summary>
        internal static string msg_donotshow {
            get {
                return ResourceManager.GetString("msg_donotshow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Mappy can listen for hotkeys regardless of what application has focus, but is not enabled by default.
        ///Since hotkey processing uses a hook, some AV software may flag this type of behavior as potentially malicious.
        ///
        ///Would you like to enable this feature?
        ///
        ///If not, be sure to check the &quot;Do not show&quot; box or you will be asked again the next time you start Mappy.
        ///You may also enable/disable hotkey filtering in the preferences dialog at any time..
        /// </summary>
        internal static string msg_hotkey_enable_text {
            get {
                return ResourceManager.GetString("msg_hotkey_enable_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Enable global hotkeys?.
        /// </summary>
        internal static string msg_hotkey_enable_title {
            get {
                return ResourceManager.GetString("msg_hotkey_enable_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning: comments, formatting, and range ordering will not be preserved in the existing file.
        ///
        ///Do you really want to overwrite the current ini file?.
        /// </summary>
        internal static string msg_iniclobber_text {
            get {
                return ResourceManager.GetString("msg_iniclobber_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Overwrite?.
        /// </summary>
        internal static string msg_iniclobber_title {
            get {
                return ResourceManager.GetString("msg_iniclobber_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a A required memory signature could not be located in the process {0}. If FFXI has been recently patched then you will need to wait until new signatures are published. If you know what you are doing, you may input new signatures on the Signature tab within the preferences window.
        ///
        ///Current Signature Addresses:
        ///{1}.
        /// </summary>
        internal static string msg_invalid_sig_text {
            get {
                return ResourceManager.GetString("msg_invalid_sig_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Signature.
        /// </summary>
        internal static string msg_invalid_sig_title {
            get {
                return ResourceManager.GetString("msg_invalid_sig_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The path {0} is invalid because it does not contain the required {1} file..
        /// </summary>
        internal static string msg_mappack_badsel_text {
            get {
                return ResourceManager.GetString("msg_mappack_badsel_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The path {0} is invalid because it does not contain the required {1} file.
        ///
        ///Would you like to choose another path?.
        /// </summary>
        internal static string msg_mappack_badsel_text_alt {
            get {
                return ResourceManager.GetString("msg_mappack_badsel_text_alt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Invalid Map Pack Path.
        /// </summary>
        internal static string msg_mappack_badsel_title {
            get {
                return ResourceManager.GetString("msg_mappack_badsel_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a No map pack could be found in {0}.
        ///
        ///If you do not have a map pack, press the &quot;Download&quot; button to get one.
        ///If your map pack is in another location, you may choose the folder now by pressing &quot;Browse&quot;.
        ///Otherwise press &quot;Ignore&quot; to continue..
        /// </summary>
        internal static string msg_mappack_invalid_text {
            get {
                return ResourceManager.GetString("msg_mappack_invalid_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Map pack could not be found.
        /// </summary>
        internal static string msg_mappack_invalid_title {
            get {
                return ResourceManager.GetString("msg_mappack_invalid_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The data path {0} no longer exists. You will be unable access or save maps, hunts, and points of interest.
        ///
        ///Press &quot;Browse&quot; to choose a new data path now or &quot;Ignore&quot; if you do not wish to set one right now..
        /// </summary>
        internal static string msg_mappath_invalid_text {
            get {
                return ResourceManager.GetString("msg_mappath_invalid_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Data path not found.
        /// </summary>
        internal static string msg_mappath_invalid_title {
            get {
                return ResourceManager.GetString("msg_mappath_invalid_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a After downloading and extracting the pack, be sure to open the preferences dialog and update the location to where your map pack is located..
        /// </summary>
        internal static string msg_pack_afterdownload_text {
            get {
                return ResourceManager.GetString("msg_pack_afterdownload_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Reminder.
        /// </summary>
        internal static string msg_pack_afterdownload_title {
            get {
                return ResourceManager.GetString("msg_pack_afterdownload_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Please note that your manual changes made to the signatures will be automatically overwritten should you upgrade or downgrade your version of Mappy in the future..
        /// </summary>
        internal static string msg_sig_warning_text {
            get {
                return ResourceManager.GetString("msg_sig_warning_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Warning.
        /// </summary>
        internal static string msg_sig_warning_title {
            get {
                return ResourceManager.GetString("msg_sig_warning_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a You have unsaved map data. This includes things such as lines, labels, and permanent hunts. If you reload the map you will permanently lose these changes.
        ///
        ///Do you still wish to continue?.
        /// </summary>
        internal static string msg_unsaved_reload_text {
            get {
                return ResourceManager.GetString("msg_unsaved_reload_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Confirm.
        /// </summary>
        internal static string msg_unsaved_reload_title {
            get {
                return ResourceManager.GetString("msg_unsaved_reload_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a You have unsaved map data. This includes things such as lines, labels, and permanent hunts. Would you like to save these now?
        ///
        ///If you choose no, all changes made will be permanently lost..
        /// </summary>
        internal static string msg_unsaved_text {
            get {
                return ResourceManager.GetString("msg_unsaved_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Save.
        /// </summary>
        internal static string msg_unsaved_title {
            get {
                return ResourceManager.GetString("msg_unsaved_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Name.
        /// </summary>
        internal static string name {
            get {
                return ResourceManager.GetString("name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Appearance.
        /// </summary>
        internal static string tab_appearance {
            get {
                return ResourceManager.GetString("tab_appearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Depth Filter.
        /// </summary>
        internal static string tab_depthfilter {
            get {
                return ResourceManager.GetString("tab_depthfilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Hot Keys.
        /// </summary>
        internal static string tab_hotkeys {
            get {
                return ResourceManager.GetString("tab_hotkeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Map.
        /// </summary>
        internal static string tab_map {
            get {
                return ResourceManager.GetString("tab_map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Signatures.
        /// </summary>
        internal static string tab_sig {
            get {
                return ResourceManager.GetString("tab_sig", resourceCulture);
            }
        }
    }
}
